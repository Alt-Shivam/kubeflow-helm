{{- if .Values.istiodPatches.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: 004a-istio-config-patch
  namespace: {{ .Values.istiodPatches.namespace | default "compass-addons" }}
  annotations:
    argocd.argoproj.io/sync-wave: "4"
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      serviceAccountName: istio-config-patcher
      containers:
      - name: patcher
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          set -e
          echo "Waiting for istiod to be ready..."
          kubectl wait --for=condition=available deployment/istiod -n istio-system --timeout=300s
          
          echo "Patching Istio ConfigMap..."
          kubectl patch configmap istio -n istio-system --type merge -p '{
            "data": {
              "mesh": "accessLogFile: /dev/stdout\ndefaultConfig:\n  discoveryAddress: istiod.istio-system.svc:15012\n  proxyMetadata: {}\n  tracing: {}\ndefaultProviders:\n  metrics:\n  - prometheus\nenablePrometheusMerge: true\nrootNamespace: istio-system\ntcpKeepalive:\n  interval: 5s\n  probes: 3\n  time: 10s\ntrustDomain: cluster.local\nextensionProviders:\n- envoyExtAuthzHttp:\n    headersToDownstreamOnDeny:\n    - content-type\n    - set-cookie\n    headersToUpstreamOnAllow:\n    - authorization\n    - path\n    - x-auth-request-email\n    - x-auth-request-groups\n    - x-auth-request-user\n    includeRequestHeadersInCheck:\n    - authorization\n    - cookie\n    service: oauth2-proxy.oauth2-proxy.svc.cluster.local\n    port: 80\n  name: oauth2-proxy\nmeshNetworks: \"networks: {}\""
            }
          }'
          
          echo "Restarting istiod to pick up new configuration..."
          kubectl rollout restart deployment/istiod -n istio-system
          kubectl rollout status deployment/istiod -n istio-system --timeout=300s
          
          echo "Istio ConfigMap patch completed successfully"
      restartPolicy: Never
  backoffLimit: 3
  ttlSecondsAfterFinished: 600

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-config-patcher
  namespace: {{ .Values.istiodPatches.namespace | default "compass-addons" }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: istio-config-patcher
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "patch", "update"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "patch", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: istio-config-patcher
subjects:
- kind: ServiceAccount
  name: istio-config-patcher
  namespace: {{ .Values.istiodPatches.namespace | default "compass-addons" }}
roleRef:
  kind: ClusterRole
  name: istio-config-patcher
  apiGroup: rbac.authorization.k8s.io
{{- end -}}